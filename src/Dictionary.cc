//
// File generated by rootcint at Tue Dec 18 20:41:05 2018

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME Dictionary
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "Dictionary.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::AliAnalysisTaskDiffCrossSectionsMM AliAnalysisTaskDiffCrossSectionsMM;
      #else
      class AliAnalysisTaskDiffCrossSectionsMM  :  public ::AliAnalysisTaskSE {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::AliAnalysisTaskDiffCrossSectionsMM::EventInfo EventInfo;
         #else
         class EventInfo  {
            public:
            //friend XX;
            G__uint64 fClassMask; //
            G__uint64 fClassMaskNext50; //
            unsigned int fBCID; //
            unsigned int fPeriod; //
            unsigned int fTimeStamp; //
            unsigned int fL0Inputs; //
            unsigned int fL1Inputs; //
            unsigned int fnSPDClusters[2]; //0 -> inner layer, 1 -> outer layer
            int fRunNumber; //
            unsigned short fnTrklet; //
            unsigned short fL2Inputs; //
            unsigned short fOrbitID; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::AliAnalysisTaskDiffCrossSectionsMM::ADV0 ADV0;
         #else
         class ADV0  {
            public:
            //friend XX;
            float fTime[2]; //
            float fCharge[2]; //
            char fBB[2]; //
            char fBG[2]; //
            double fDecisionOnline[2]; //[-1,3,2]
            double fDecisionOffline[2]; //[-1,3,2]
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::AliAnalysisTaskDiffCrossSectionsMM::ZDC ZDC;
         #else
         class ZDC  {
            public:
            //friend XX;
            bool fZNHit[2]; //Hit in Neutron part
            bool fZPHit[2]; //Hit in Proton part
            float fZNEnergy[2]; //Reconstructed energy in the neutron ZDC
            float fZPEnergy[2]; //Reconstructed energy in the proton ZDC
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo VtxInfo;
         #else
         class VtxInfo  {
            public:
            //friend XX;
            double fZ; //[-32,32,7]
            char fNcontr; //
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo MCInfo;
         #else
         class MCInfo  :  public ::TObject {
            public:
            //friend XX;
            #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
            typedef ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel DetGenLevel;
            #else
            class DetGenLevel  {
               public:
               //friend XX;
               unsigned short NCharged; //
               unsigned short NNeutral; //
               float MeanPtCharged; //
               float MeanPtNeutral; //
               float MinPtCharged; //
               float MinPtNeutral; //
               float MaxPtCharged; //
               float MaxPtNeutral; //
            };
            #endif

            #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
            typedef ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem DiffSystem;
            #else
            class DiffSystem  {
               public:
               //friend XX;
               float t; //Mandelstam, physical domain is negative values in GeV^2.
               float Mass[2]; //Diffractive system mass [0] -> L, [1] -> R (calculated from the final states 4-momenta)
               float Mass_PDG[2]; //(calculated from Pythia Diffractive Pseudoparticle 4-momentum with PDG code 9902210)
               unsigned short NCharged[2]; //Charged multiplicity
               unsigned short NNeutral[2]; //Neutral
               float MeanPtCharged[2]; //Mean |pt| of charged
               float MeanPtNeutral[2]; //Neutral
               float MinEtaCharged[2]; //Minimum pseudorapidity of charged particles in the system
               float MinEtaNeutral[2]; //Neutral
               float MaxEtaCharged[2]; //Maximum pseudorapidity of charged particles in the system
               float MaxEtaNeutral[2]; //Neutral
            };
            #endif

            // To force the creation of a virtual table, throw just in case.
            virtual ~MCInfo() throw() {};
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~AliAnalysisTaskDiffCrossSectionsMM() throw() {};
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMM_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AliAnalysisTaskDiffCrossSectionsMM(void *p = 0);
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMM(Long_t size, void *p);
   static void delete_AliAnalysisTaskDiffCrossSectionsMM(void *p);
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMM(void *p);
   static void destruct_AliAnalysisTaskDiffCrossSectionsMM(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliAnalysisTaskDiffCrossSectionsMM*)
   {
      ::AliAnalysisTaskDiffCrossSectionsMM *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AliAnalysisTaskDiffCrossSectionsMM >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AliAnalysisTaskDiffCrossSectionsMM", ::AliAnalysisTaskDiffCrossSectionsMM::Class_Version(), "./AliAnalysisTaskDiffCrossSectionsMM.h", 42,
                  typeid(::AliAnalysisTaskDiffCrossSectionsMM), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AliAnalysisTaskDiffCrossSectionsMM::Dictionary, isa_proxy, 4,
                  sizeof(::AliAnalysisTaskDiffCrossSectionsMM) );
      instance.SetNew(&new_AliAnalysisTaskDiffCrossSectionsMM);
      instance.SetNewArray(&newArray_AliAnalysisTaskDiffCrossSectionsMM);
      instance.SetDelete(&delete_AliAnalysisTaskDiffCrossSectionsMM);
      instance.SetDeleteArray(&deleteArray_AliAnalysisTaskDiffCrossSectionsMM);
      instance.SetDestructor(&destruct_AliAnalysisTaskDiffCrossSectionsMM);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliAnalysisTaskDiffCrossSectionsMM*)
   {
      return GenerateInitInstanceLocal((::AliAnalysisTaskDiffCrossSectionsMM*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo_Dictionary();
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo(void *p = 0);
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo(Long_t size, void *p);
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo(void *p);
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo(void *p);
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliAnalysisTaskDiffCrossSectionsMM::EventInfo*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::AliAnalysisTaskDiffCrossSectionsMM::EventInfo) == sizeof( ::ROOTShadow::Shadow::AliAnalysisTaskDiffCrossSectionsMM::EventInfo));
      ::AliAnalysisTaskDiffCrossSectionsMM::EventInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::AliAnalysisTaskDiffCrossSectionsMM::EventInfo),0);
      static ::ROOT::TGenericClassInfo 
         instance("AliAnalysisTaskDiffCrossSectionsMM::EventInfo", "./AliAnalysisTaskDiffCrossSectionsMM.h", 79,
                  typeid(::AliAnalysisTaskDiffCrossSectionsMM::EventInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo_ShowMembers, &AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo_Dictionary, isa_proxy, 4,
                  sizeof(::AliAnalysisTaskDiffCrossSectionsMM::EventInfo) );
      instance.SetNew(&new_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo);
      instance.SetNewArray(&newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo);
      instance.SetDelete(&delete_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo);
      instance.SetDeleteArray(&deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo);
      instance.SetDestructor(&destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliAnalysisTaskDiffCrossSectionsMM::EventInfo*)
   {
      return GenerateInitInstanceLocal((::AliAnalysisTaskDiffCrossSectionsMM::EventInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::EventInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::EventInfo*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLADV0_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void AliAnalysisTaskDiffCrossSectionsMMcLcLADV0_Dictionary();
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0(void *p = 0);
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0(Long_t size, void *p);
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0(void *p);
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0(void *p);
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliAnalysisTaskDiffCrossSectionsMM::ADV0*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::AliAnalysisTaskDiffCrossSectionsMM::ADV0) == sizeof( ::ROOTShadow::Shadow::AliAnalysisTaskDiffCrossSectionsMM::ADV0));
      ::AliAnalysisTaskDiffCrossSectionsMM::ADV0 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::AliAnalysisTaskDiffCrossSectionsMM::ADV0),0);
      static ::ROOT::TGenericClassInfo 
         instance("AliAnalysisTaskDiffCrossSectionsMM::ADV0", "./AliAnalysisTaskDiffCrossSectionsMM.h", 113,
                  typeid(::AliAnalysisTaskDiffCrossSectionsMM::ADV0), ::ROOT::DefineBehavior(ptr, ptr),
                  &AliAnalysisTaskDiffCrossSectionsMMcLcLADV0_ShowMembers, &AliAnalysisTaskDiffCrossSectionsMMcLcLADV0_Dictionary, isa_proxy, 4,
                  sizeof(::AliAnalysisTaskDiffCrossSectionsMM::ADV0) );
      instance.SetNew(&new_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0);
      instance.SetNewArray(&newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0);
      instance.SetDelete(&delete_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0);
      instance.SetDeleteArray(&deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0);
      instance.SetDestructor(&destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliAnalysisTaskDiffCrossSectionsMM::ADV0*)
   {
      return GenerateInitInstanceLocal((::AliAnalysisTaskDiffCrossSectionsMM::ADV0*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::ADV0*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void AliAnalysisTaskDiffCrossSectionsMMcLcLADV0_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::ADV0*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLZDC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void AliAnalysisTaskDiffCrossSectionsMMcLcLZDC_Dictionary();
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC(void *p = 0);
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC(Long_t size, void *p);
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC(void *p);
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC(void *p);
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliAnalysisTaskDiffCrossSectionsMM::ZDC*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::AliAnalysisTaskDiffCrossSectionsMM::ZDC) == sizeof( ::ROOTShadow::Shadow::AliAnalysisTaskDiffCrossSectionsMM::ZDC));
      ::AliAnalysisTaskDiffCrossSectionsMM::ZDC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::AliAnalysisTaskDiffCrossSectionsMM::ZDC),0);
      static ::ROOT::TGenericClassInfo 
         instance("AliAnalysisTaskDiffCrossSectionsMM::ZDC", "./AliAnalysisTaskDiffCrossSectionsMM.h", 143,
                  typeid(::AliAnalysisTaskDiffCrossSectionsMM::ZDC), ::ROOT::DefineBehavior(ptr, ptr),
                  &AliAnalysisTaskDiffCrossSectionsMMcLcLZDC_ShowMembers, &AliAnalysisTaskDiffCrossSectionsMMcLcLZDC_Dictionary, isa_proxy, 4,
                  sizeof(::AliAnalysisTaskDiffCrossSectionsMM::ZDC) );
      instance.SetNew(&new_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC);
      instance.SetNewArray(&newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC);
      instance.SetDelete(&delete_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC);
      instance.SetDeleteArray(&deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC);
      instance.SetDestructor(&destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliAnalysisTaskDiffCrossSectionsMM::ZDC*)
   {
      return GenerateInitInstanceLocal((::AliAnalysisTaskDiffCrossSectionsMM::ZDC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::ZDC*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void AliAnalysisTaskDiffCrossSectionsMMcLcLZDC_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::ZDC*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo_Dictionary();
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo(void *p = 0);
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo(Long_t size, void *p);
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo(void *p);
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo(void *p);
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo) == sizeof( ::ROOTShadow::Shadow::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo));
      ::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo),0);
      static ::ROOT::TGenericClassInfo 
         instance("AliAnalysisTaskDiffCrossSectionsMM::VtxInfo", "./AliAnalysisTaskDiffCrossSectionsMM.h", 170,
                  typeid(::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo_ShowMembers, &AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo_Dictionary, isa_proxy, 4,
                  sizeof(::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo) );
      instance.SetNew(&new_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo);
      instance.SetNewArray(&newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo);
      instance.SetDelete(&delete_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo);
      instance.SetDeleteArray(&deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo);
      instance.SetDestructor(&destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*)
   {
      return GenerateInitInstanceLocal((::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData(void *p = 0);
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData(Long_t size, void *p);
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData(void *p);
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData(void *p);
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliAnalysisTaskDiffCrossSectionsMM::TreeData*)
   {
      ::AliAnalysisTaskDiffCrossSectionsMM::TreeData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AliAnalysisTaskDiffCrossSectionsMM::TreeData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AliAnalysisTaskDiffCrossSectionsMM::TreeData", ::AliAnalysisTaskDiffCrossSectionsMM::TreeData::Class_Version(), "./AliAnalysisTaskDiffCrossSectionsMM.h", 184,
                  typeid(::AliAnalysisTaskDiffCrossSectionsMM::TreeData), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AliAnalysisTaskDiffCrossSectionsMM::TreeData::Dictionary, isa_proxy, 4,
                  sizeof(::AliAnalysisTaskDiffCrossSectionsMM::TreeData) );
      instance.SetNew(&new_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData);
      instance.SetNewArray(&newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData);
      instance.SetDelete(&delete_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData);
      instance.SetDeleteArray(&deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData);
      instance.SetDestructor(&destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliAnalysisTaskDiffCrossSectionsMM::TreeData*)
   {
      return GenerateInitInstanceLocal((::AliAnalysisTaskDiffCrossSectionsMM::TreeData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::TreeData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo(void *p = 0);
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo(Long_t size, void *p);
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo(void *p);
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo(void *p);
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo*)
   {
      ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("AliAnalysisTaskDiffCrossSectionsMM::MCInfo", ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Class_Version(), "./AliAnalysisTaskDiffCrossSectionsMM.h", 213,
                  typeid(::AliAnalysisTaskDiffCrossSectionsMM::MCInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Dictionary, isa_proxy, 4,
                  sizeof(::AliAnalysisTaskDiffCrossSectionsMM::MCInfo) );
      instance.SetNew(&new_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo);
      instance.SetNewArray(&newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo);
      instance.SetDelete(&delete_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo);
      instance.SetDeleteArray(&deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo);
      instance.SetDestructor(&destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo*)
   {
      return GenerateInitInstanceLocal((::AliAnalysisTaskDiffCrossSectionsMM::MCInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel_Dictionary();
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel(void *p = 0);
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel(Long_t size, void *p);
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel(void *p);
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel(void *p);
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel) == sizeof( ::ROOTShadow::Shadow::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel));
      ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel),0);
      static ::ROOT::TGenericClassInfo 
         instance("AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel", "./AliAnalysisTaskDiffCrossSectionsMM.h", 226,
                  typeid(::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel), ::ROOT::DefineBehavior(ptr, ptr),
                  &AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel_ShowMembers, &AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel_Dictionary, isa_proxy, 4,
                  sizeof(::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel) );
      instance.SetNew(&new_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel);
      instance.SetNewArray(&newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel);
      instance.SetDelete(&delete_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel);
      instance.SetDeleteArray(&deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel);
      instance.SetDestructor(&destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*)
   {
      return GenerateInitInstanceLocal((::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem_Dictionary();
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem(void *p = 0);
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem(Long_t size, void *p);
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem(void *p);
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem(void *p);
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem) == sizeof( ::ROOTShadow::Shadow::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem));
      ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem),0);
      static ::ROOT::TGenericClassInfo 
         instance("AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem", "./AliAnalysisTaskDiffCrossSectionsMM.h", 257,
                  typeid(::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem), ::ROOT::DefineBehavior(ptr, ptr),
                  &AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem_ShowMembers, &AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem_Dictionary, isa_proxy, 4,
                  sizeof(::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem) );
      instance.SetNew(&new_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem);
      instance.SetNewArray(&newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem);
      instance.SetDelete(&delete_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem);
      instance.SetDeleteArray(&deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem);
      instance.SetDestructor(&destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*)
   {
      return GenerateInitInstanceLocal((::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr AliAnalysisTaskDiffCrossSectionsMM::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AliAnalysisTaskDiffCrossSectionsMM::Class_Name()
{
   return "AliAnalysisTaskDiffCrossSectionsMM";
}

//______________________________________________________________________________
const char *AliAnalysisTaskDiffCrossSectionsMM::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AliAnalysisTaskDiffCrossSectionsMM::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AliAnalysisTaskDiffCrossSectionsMM::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AliAnalysisTaskDiffCrossSectionsMM::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AliAnalysisTaskDiffCrossSectionsMM::TreeData::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AliAnalysisTaskDiffCrossSectionsMM::TreeData::Class_Name()
{
   return "AliAnalysisTaskDiffCrossSectionsMM::TreeData";
}

//______________________________________________________________________________
const char *AliAnalysisTaskDiffCrossSectionsMM::TreeData::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::TreeData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AliAnalysisTaskDiffCrossSectionsMM::TreeData::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::TreeData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AliAnalysisTaskDiffCrossSectionsMM::TreeData::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::TreeData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AliAnalysisTaskDiffCrossSectionsMM::TreeData::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::TreeData*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr AliAnalysisTaskDiffCrossSectionsMM::MCInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Class_Name()
{
   return "AliAnalysisTaskDiffCrossSectionsMM::MCInfo";
}

//______________________________________________________________________________
const char *AliAnalysisTaskDiffCrossSectionsMM::MCInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AliAnalysisTaskDiffCrossSectionsMM::MCInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void AliAnalysisTaskDiffCrossSectionsMM::Streamer(TBuffer &R__b)
{
   // Stream an object of class AliAnalysisTaskDiffCrossSectionsMM.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AliAnalysisTaskDiffCrossSectionsMM::Class(),this);
   } else {
      R__b.WriteClassBuffer(AliAnalysisTaskDiffCrossSectionsMM::Class(),this);
   }
}

//______________________________________________________________________________
void AliAnalysisTaskDiffCrossSectionsMM::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AliAnalysisTaskDiffCrossSectionsMM.
      TClass *R__cl = ::AliAnalysisTaskDiffCrossSectionsMM::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsMC", &fIsMC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCType", &fMCType);
      R__insp.InspectMember(fMCType, "fMCType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerSelection", &fTriggerSelection);
      R__insp.InspectMember(fTriggerSelection, "fTriggerSelection.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerAnalysis", &fTriggerAnalysis);
      R__insp.InspectMember(fTriggerAnalysis, "fTriggerAnalysis.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnalysisUtils", &fAnalysisUtils);
      R__insp.InspectMember(fAnalysisUtils, "fAnalysisUtils.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTE", &fTE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFastOrMap", &fFastOrMap);
      R__insp.InspectMember(fFastOrMap, "fFastOrMap.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFiredChipMap", &fFiredChipMap);
      R__insp.InspectMember(fFiredChipMap, "fFiredChipMap.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVertexSPD", &fVertexSPD);
      R__insp.InspectMember(fVertexSPD, "fVertexSPD.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTreeData", &fTreeData);
      R__insp.InspectMember(fTreeData, "fTreeData.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCInfo", &fMCInfo);
      R__insp.InspectMember(fMCInfo, "fMCInfo.");
      AliAnalysisTaskSE::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AliAnalysisTaskDiffCrossSectionsMM(void *p) {
      return  p ? new(p) ::AliAnalysisTaskDiffCrossSectionsMM : new ::AliAnalysisTaskDiffCrossSectionsMM;
   }
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMM(Long_t nElements, void *p) {
      return p ? new(p) ::AliAnalysisTaskDiffCrossSectionsMM[nElements] : new ::AliAnalysisTaskDiffCrossSectionsMM[nElements];
   }
   // Wrapper around operator delete
   static void delete_AliAnalysisTaskDiffCrossSectionsMM(void *p) {
      delete ((::AliAnalysisTaskDiffCrossSectionsMM*)p);
   }
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMM(void *p) {
      delete [] ((::AliAnalysisTaskDiffCrossSectionsMM*)p);
   }
   static void destruct_AliAnalysisTaskDiffCrossSectionsMM(void *p) {
      typedef ::AliAnalysisTaskDiffCrossSectionsMM current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliAnalysisTaskDiffCrossSectionsMM

//______________________________________________________________________________
void AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class AliAnalysisTaskDiffCrossSectionsMM::MCInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Class(),this);
   }
}

//______________________________________________________________________________
void AliAnalysisTaskDiffCrossSectionsMM::MCInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AliAnalysisTaskDiffCrossSectionsMM::MCInfo.
      TClass *R__cl = ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventType", &fEventType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDiffSys", (void*)&fDiffSys);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem", (void*)&fDiffSys, "fDiffSys.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EM_check_SC", &EM_check_SC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EM_check_PP", &EM_check_PP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZDNC", (void*)&ZDNC);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel", (void*)&ZDNC, "ZDNC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ADC", (void*)&ADC);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel", (void*)&ADC, "ADC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V0C", (void*)&V0C);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel", (void*)&V0C, "V0C.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SPDC", (void*)&SPDC);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel", (void*)&SPDC, "SPDC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SPDA", (void*)&SPDA);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel", (void*)&SPDA, "SPDA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "V0A", (void*)&V0A);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel", (void*)&V0A, "V0A.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ADA", (void*)&ADA);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel", (void*)&ADA, "ADA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZDNA", (void*)&ZDNA);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel", (void*)&ZDNA, "ZDNA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MinEtaVisibleCharged", &MinEtaVisibleCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxEtaVisibleCharged", &MaxEtaVisibleCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxGapVisibleCharged", &MaxGapVisibleCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MinEtaVisibleNeutral", &MinEtaVisibleNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxEtaVisibleNeutral", &MaxEtaVisibleNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxGapVisibleNeutral", &MaxGapVisibleNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxGapVisibleAll", &MaxGapVisibleAll);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo(void *p) {
      return  p ? new(p) ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo : new ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo;
   }
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo(Long_t nElements, void *p) {
      return p ? new(p) ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo[nElements] : new ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo(void *p) {
      delete ((::AliAnalysisTaskDiffCrossSectionsMM::MCInfo*)p);
   }
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo(void *p) {
      delete [] ((::AliAnalysisTaskDiffCrossSectionsMM::MCInfo*)p);
   }
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo(void *p) {
      typedef ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo

//______________________________________________________________________________
namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem.
      typedef ::ROOTShadow::Shadow::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "t", &sobj->t);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mass[2]", sobj->Mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Mass_PDG[2]", sobj->Mass_PDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NCharged[2]", sobj->NCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NNeutral[2]", sobj->NNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MeanPtCharged[2]", sobj->MeanPtCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MeanPtNeutral[2]", sobj->MeanPtNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MinEtaCharged[2]", sobj->MinEtaCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MinEtaNeutral[2]", sobj->MinEtaNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxEtaCharged[2]", sobj->MaxEtaCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxEtaNeutral[2]", sobj->MaxEtaNeutral);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem : new ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem;
   }
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem[nElements] : new ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem[nElements];
   }
   // Wrapper around operator delete
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem(void *p) {
      delete ((::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*)p);
   }
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem(void *p) {
      delete [] ((::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*)p);
   }
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem(void *p) {
      typedef ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem

//______________________________________________________________________________
namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel.
      typedef ::ROOTShadow::Shadow::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NCharged", &sobj->NCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NNeutral", &sobj->NNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MeanPtCharged", &sobj->MeanPtCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MeanPtNeutral", &sobj->MeanPtNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MinPtCharged", &sobj->MinPtCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MinPtNeutral", &sobj->MinPtNeutral);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxPtCharged", &sobj->MaxPtCharged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "MaxPtNeutral", &sobj->MaxPtNeutral);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel : new ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel;
   }
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel[nElements] : new ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel[nElements];
   }
   // Wrapper around operator delete
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel(void *p) {
      delete ((::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*)p);
   }
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel(void *p) {
      delete [] ((::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*)p);
   }
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel(void *p) {
      typedef ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel

//______________________________________________________________________________
void AliAnalysisTaskDiffCrossSectionsMM::TreeData::Streamer(TBuffer &R__b)
{
   // Stream an object of class AliAnalysisTaskDiffCrossSectionsMM::TreeData.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(AliAnalysisTaskDiffCrossSectionsMM::TreeData::Class(),this);
   } else {
      R__b.WriteClassBuffer(AliAnalysisTaskDiffCrossSectionsMM::TreeData::Class(),this);
   }
}

//______________________________________________________________________________
void AliAnalysisTaskDiffCrossSectionsMM::TreeData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class AliAnalysisTaskDiffCrossSectionsMM::TreeData.
      TClass *R__cl = ::AliAnalysisTaskDiffCrossSectionsMM::TreeData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventInfo", (void*)&fEventInfo);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::EventInfo", (void*)&fEventInfo, "fEventInfo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVtxInfo", (void*)&fVtxInfo);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::VtxInfo", (void*)&fVtxInfo, "fVtxInfo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fV0Info", (void*)&fV0Info);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::ADV0", (void*)&fV0Info, "fV0Info.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADInfo", (void*)&fADInfo);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::ADV0", (void*)&fADInfo, "fADInfo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZDCInfo", (void*)&fZDCInfo);
      R__insp.InspectMember("AliAnalysisTaskDiffCrossSectionsMM::ZDC", (void*)&fZDCInfo, "fZDCInfo.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhysSelBits", &fPhysSelBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsIncompleteDAQ", &fIsIncompleteDAQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsSPDClusterVsTrackletBG", &fIsSPDClusterVsTrackletBG);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData(void *p) {
      return  p ? new(p) ::AliAnalysisTaskDiffCrossSectionsMM::TreeData : new ::AliAnalysisTaskDiffCrossSectionsMM::TreeData;
   }
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData(Long_t nElements, void *p) {
      return p ? new(p) ::AliAnalysisTaskDiffCrossSectionsMM::TreeData[nElements] : new ::AliAnalysisTaskDiffCrossSectionsMM::TreeData[nElements];
   }
   // Wrapper around operator delete
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData(void *p) {
      delete ((::AliAnalysisTaskDiffCrossSectionsMM::TreeData*)p);
   }
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData(void *p) {
      delete [] ((::AliAnalysisTaskDiffCrossSectionsMM::TreeData*)p);
   }
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData(void *p) {
      typedef ::AliAnalysisTaskDiffCrossSectionsMM::TreeData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliAnalysisTaskDiffCrossSectionsMM::TreeData

//______________________________________________________________________________
namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class AliAnalysisTaskDiffCrossSectionsMM::EventInfo.
      typedef ::ROOTShadow::Shadow::AliAnalysisTaskDiffCrossSectionsMM::EventInfo ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::EventInfo*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClassMask", &sobj->fClassMask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClassMaskNext50", &sobj->fClassMaskNext50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBCID", &sobj->fBCID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPeriod", &sobj->fPeriod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeStamp", &sobj->fTimeStamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL0Inputs", &sobj->fL0Inputs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL1Inputs", &sobj->fL1Inputs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnSPDClusters[2]", sobj->fnSPDClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunNumber", &sobj->fRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnTrklet", &sobj->fnTrklet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fL2Inputs", &sobj->fL2Inputs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrbitID", &sobj->fOrbitID);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AliAnalysisTaskDiffCrossSectionsMM::EventInfo : new ::AliAnalysisTaskDiffCrossSectionsMM::EventInfo;
   }
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AliAnalysisTaskDiffCrossSectionsMM::EventInfo[nElements] : new ::AliAnalysisTaskDiffCrossSectionsMM::EventInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo(void *p) {
      delete ((::AliAnalysisTaskDiffCrossSectionsMM::EventInfo*)p);
   }
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo(void *p) {
      delete [] ((::AliAnalysisTaskDiffCrossSectionsMM::EventInfo*)p);
   }
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo(void *p) {
      typedef ::AliAnalysisTaskDiffCrossSectionsMM::EventInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliAnalysisTaskDiffCrossSectionsMM::EventInfo

//______________________________________________________________________________
namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class AliAnalysisTaskDiffCrossSectionsMM::VtxInfo.
      typedef ::ROOTShadow::Shadow::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &sobj->fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNcontr", &sobj->fNcontr);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo : new ::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo;
   }
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo[nElements] : new ::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo(void *p) {
      delete ((::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*)p);
   }
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo(void *p) {
      delete [] ((::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*)p);
   }
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo(void *p) {
      typedef ::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliAnalysisTaskDiffCrossSectionsMM::VtxInfo

//______________________________________________________________________________
namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLADV0_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class AliAnalysisTaskDiffCrossSectionsMM::ADV0.
      typedef ::ROOTShadow::Shadow::AliAnalysisTaskDiffCrossSectionsMM::ADV0 ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::ADV0*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime[2]", sobj->fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCharge[2]", sobj->fCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBB[2]", sobj->fBB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBG[2]", sobj->fBG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDecisionOnline[2]", sobj->fDecisionOnline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDecisionOffline[2]", sobj->fDecisionOffline);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AliAnalysisTaskDiffCrossSectionsMM::ADV0 : new ::AliAnalysisTaskDiffCrossSectionsMM::ADV0;
   }
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AliAnalysisTaskDiffCrossSectionsMM::ADV0[nElements] : new ::AliAnalysisTaskDiffCrossSectionsMM::ADV0[nElements];
   }
   // Wrapper around operator delete
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0(void *p) {
      delete ((::AliAnalysisTaskDiffCrossSectionsMM::ADV0*)p);
   }
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0(void *p) {
      delete [] ((::AliAnalysisTaskDiffCrossSectionsMM::ADV0*)p);
   }
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0(void *p) {
      typedef ::AliAnalysisTaskDiffCrossSectionsMM::ADV0 current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliAnalysisTaskDiffCrossSectionsMM::ADV0

//______________________________________________________________________________
namespace ROOTDict {
   void AliAnalysisTaskDiffCrossSectionsMMcLcLZDC_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class AliAnalysisTaskDiffCrossSectionsMM::ZDC.
      typedef ::ROOTShadow::Shadow::AliAnalysisTaskDiffCrossSectionsMM::ZDC ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOTDict::GenerateInitInstanceLocal((const ::AliAnalysisTaskDiffCrossSectionsMM::ZDC*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZNHit[2]", sobj->fZNHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZPHit[2]", sobj->fZPHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZNEnergy[2]", sobj->fZNEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZPEnergy[2]", sobj->fZPEnergy);
   }

}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AliAnalysisTaskDiffCrossSectionsMM::ZDC : new ::AliAnalysisTaskDiffCrossSectionsMM::ZDC;
   }
   static void *newArray_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::AliAnalysisTaskDiffCrossSectionsMM::ZDC[nElements] : new ::AliAnalysisTaskDiffCrossSectionsMM::ZDC[nElements];
   }
   // Wrapper around operator delete
   static void delete_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC(void *p) {
      delete ((::AliAnalysisTaskDiffCrossSectionsMM::ZDC*)p);
   }
   static void deleteArray_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC(void *p) {
      delete [] ((::AliAnalysisTaskDiffCrossSectionsMM::ZDC*)p);
   }
   static void destruct_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC(void *p) {
      typedef ::AliAnalysisTaskDiffCrossSectionsMM::ZDC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::AliAnalysisTaskDiffCrossSectionsMM::ZDC

/********************************************************
* Dictionary.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDictionary();

extern "C" void G__set_cpp_environmentDictionary() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("AliAnalysisTaskDiffCrossSectionsMM.h");
  G__cpp_reset_tagtableDictionary();
}
#include <new>
extern "C" int G__cpp_dllrevDictionary() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* AliAnalysisTaskDiffCrossSectionsMM */
static int G__Dictionary_641_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new AliAnalysisTaskDiffCrossSectionsMM[n];
       } else {
         p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new AliAnalysisTaskDiffCrossSectionsMM;
       } else {
         p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((AliAnalysisTaskDiffCrossSectionsMM*) G__getstructoffset())->SetIsMC((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((AliAnalysisTaskDiffCrossSectionsMM*) G__getstructoffset())->SetIsMC();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM*) G__getstructoffset())->SetMCType(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM*) G__getstructoffset())->SetTriggerSelection(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const AliAnalysisTaskDiffCrossSectionsMM*) G__getstructoffset())->GetTreeName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const AliAnalysisTaskDiffCrossSectionsMM*) G__getstructoffset())->GetResultsFileName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AliAnalysisTaskDiffCrossSectionsMM::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliAnalysisTaskDiffCrossSectionsMM::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AliAnalysisTaskDiffCrossSectionsMM::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AliAnalysisTaskDiffCrossSectionsMM::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliAnalysisTaskDiffCrossSectionsMM::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AliAnalysisTaskDiffCrossSectionsMM::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliAnalysisTaskDiffCrossSectionsMM::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_641_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AliAnalysisTaskDiffCrossSectionsMM::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliAnalysisTaskDiffCrossSectionsMM G__TAliAnalysisTaskDiffCrossSectionsMM;
static int G__Dictionary_641_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliAnalysisTaskDiffCrossSectionsMM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliAnalysisTaskDiffCrossSectionsMM*) (soff+(sizeof(AliAnalysisTaskDiffCrossSectionsMM)*i)))->~G__TAliAnalysisTaskDiffCrossSectionsMM();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliAnalysisTaskDiffCrossSectionsMM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliAnalysisTaskDiffCrossSectionsMM*) (soff))->~G__TAliAnalysisTaskDiffCrossSectionsMM();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AliAnalysisTaskDiffCrossSectionsMM::EventInfo */
static int G__Dictionary_642_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::EventInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::EventInfo[n];
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::EventInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::EventInfo;
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::EventInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_642_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::EventInfo*) G__getstructoffset())->Fill((AliESDEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_642_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AliAnalysisTaskDiffCrossSectionsMM::EventInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AliAnalysisTaskDiffCrossSectionsMM::EventInfo(*(AliAnalysisTaskDiffCrossSectionsMM::EventInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliAnalysisTaskDiffCrossSectionsMM::EventInfo G__TAliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo;
static int G__Dictionary_642_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliAnalysisTaskDiffCrossSectionsMM::EventInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliAnalysisTaskDiffCrossSectionsMM::EventInfo*) (soff+(sizeof(AliAnalysisTaskDiffCrossSectionsMM::EventInfo)*i)))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliAnalysisTaskDiffCrossSectionsMM::EventInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliAnalysisTaskDiffCrossSectionsMM::EventInfo*) (soff))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_642_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::EventInfo* dest = (AliAnalysisTaskDiffCrossSectionsMM::EventInfo*) G__getstructoffset();
   *dest = *(AliAnalysisTaskDiffCrossSectionsMM::EventInfo*) libp->para[0].ref;
   const AliAnalysisTaskDiffCrossSectionsMM::EventInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AliAnalysisTaskDiffCrossSectionsMM::ADV0 */
static int G__Dictionary_643_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::ADV0* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::ADV0[n];
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::ADV0[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::ADV0;
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::ADV0;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_643_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::ADV0*) G__getstructoffset())->FillAD((AliESDEvent*) G__int(libp->para[0]), *(AliTriggerAnalysis*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_643_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::ADV0*) G__getstructoffset())->FillV0((AliESDEvent*) G__int(libp->para[0]), *(AliTriggerAnalysis*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_643_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::ADV0*) G__getstructoffset())->FillInvalid();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_643_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AliAnalysisTaskDiffCrossSectionsMM::ADV0* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AliAnalysisTaskDiffCrossSectionsMM::ADV0(*(AliAnalysisTaskDiffCrossSectionsMM::ADV0*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliAnalysisTaskDiffCrossSectionsMM::ADV0 G__TAliAnalysisTaskDiffCrossSectionsMMcLcLADV0;
static int G__Dictionary_643_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliAnalysisTaskDiffCrossSectionsMM::ADV0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliAnalysisTaskDiffCrossSectionsMM::ADV0*) (soff+(sizeof(AliAnalysisTaskDiffCrossSectionsMM::ADV0)*i)))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLADV0();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliAnalysisTaskDiffCrossSectionsMM::ADV0*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliAnalysisTaskDiffCrossSectionsMM::ADV0*) (soff))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLADV0();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_643_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::ADV0* dest = (AliAnalysisTaskDiffCrossSectionsMM::ADV0*) G__getstructoffset();
   *dest = *(AliAnalysisTaskDiffCrossSectionsMM::ADV0*) libp->para[0].ref;
   const AliAnalysisTaskDiffCrossSectionsMM::ADV0& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AliAnalysisTaskDiffCrossSectionsMM::ZDC */
static int G__Dictionary_645_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::ZDC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::ZDC[n];
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::ZDC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::ZDC;
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::ZDC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_645_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::ZDC*) G__getstructoffset())->FillZDC((AliESDEvent*) G__int(libp->para[0]), *(AliTriggerAnalysis*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_645_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::ZDC*) G__getstructoffset())->FillInvalid();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_645_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AliAnalysisTaskDiffCrossSectionsMM::ZDC* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AliAnalysisTaskDiffCrossSectionsMM::ZDC(*(AliAnalysisTaskDiffCrossSectionsMM::ZDC*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliAnalysisTaskDiffCrossSectionsMM::ZDC G__TAliAnalysisTaskDiffCrossSectionsMMcLcLZDC;
static int G__Dictionary_645_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliAnalysisTaskDiffCrossSectionsMM::ZDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliAnalysisTaskDiffCrossSectionsMM::ZDC*) (soff+(sizeof(AliAnalysisTaskDiffCrossSectionsMM::ZDC)*i)))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLZDC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliAnalysisTaskDiffCrossSectionsMM::ZDC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliAnalysisTaskDiffCrossSectionsMM::ZDC*) (soff))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLZDC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_645_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::ZDC* dest = (AliAnalysisTaskDiffCrossSectionsMM::ZDC*) G__getstructoffset();
   *dest = *(AliAnalysisTaskDiffCrossSectionsMM::ZDC*) libp->para[0].ref;
   const AliAnalysisTaskDiffCrossSectionsMM::ZDC& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AliAnalysisTaskDiffCrossSectionsMM::VtxInfo */
static int G__Dictionary_647_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::VtxInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::VtxInfo[n];
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::VtxInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::VtxInfo;
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::VtxInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_647_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*) G__getstructoffset())->Fill((AliESDVertex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_647_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AliAnalysisTaskDiffCrossSectionsMM::VtxInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AliAnalysisTaskDiffCrossSectionsMM::VtxInfo(*(AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliAnalysisTaskDiffCrossSectionsMM::VtxInfo G__TAliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo;
static int G__Dictionary_647_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*) (soff+(sizeof(AliAnalysisTaskDiffCrossSectionsMM::VtxInfo)*i)))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*) (soff))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_647_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::VtxInfo* dest = (AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*) G__getstructoffset();
   *dest = *(AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*) libp->para[0].ref;
   const AliAnalysisTaskDiffCrossSectionsMM::VtxInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AliAnalysisTaskDiffCrossSectionsMM::TreeData */
static int G__Dictionary_648_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::TreeData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::TreeData[n];
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::TreeData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::TreeData;
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::TreeData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_648_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AliAnalysisTaskDiffCrossSectionsMM::TreeData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_648_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliAnalysisTaskDiffCrossSectionsMM::TreeData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_648_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AliAnalysisTaskDiffCrossSectionsMM::TreeData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_648_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AliAnalysisTaskDiffCrossSectionsMM::TreeData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_648_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::TreeData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_648_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliAnalysisTaskDiffCrossSectionsMM::TreeData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_648_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AliAnalysisTaskDiffCrossSectionsMM::TreeData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_648_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliAnalysisTaskDiffCrossSectionsMM::TreeData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_648_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AliAnalysisTaskDiffCrossSectionsMM::TreeData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_648_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AliAnalysisTaskDiffCrossSectionsMM::TreeData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AliAnalysisTaskDiffCrossSectionsMM::TreeData(*(AliAnalysisTaskDiffCrossSectionsMM::TreeData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliAnalysisTaskDiffCrossSectionsMM::TreeData G__TAliAnalysisTaskDiffCrossSectionsMMcLcLTreeData;
static int G__Dictionary_648_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliAnalysisTaskDiffCrossSectionsMM::TreeData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliAnalysisTaskDiffCrossSectionsMM::TreeData*) (soff+(sizeof(AliAnalysisTaskDiffCrossSectionsMM::TreeData)*i)))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLTreeData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliAnalysisTaskDiffCrossSectionsMM::TreeData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliAnalysisTaskDiffCrossSectionsMM::TreeData*) (soff))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLTreeData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_648_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::TreeData* dest = (AliAnalysisTaskDiffCrossSectionsMM::TreeData*) G__getstructoffset();
   *dest = *(AliAnalysisTaskDiffCrossSectionsMM::TreeData*) libp->para[0].ref;
   const AliAnalysisTaskDiffCrossSectionsMM::TreeData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AliAnalysisTaskDiffCrossSectionsMM::MCInfo */
static int G__Dictionary_649_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::MCInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::MCInfo[n];
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::MCInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::MCInfo;
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::MCInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->Fill((AliMCEvent*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->FillComb((AliMCEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->CheckFiducial((TParticle*) G__int(libp->para[0]), *(AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*) libp->para[1].ref
, (Double_t*) G__int(libp->para[2]), (const Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->ReCalc4Vector(*(TLorentzVector*) libp->para[0].ref, (TParticle*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->CalcInitialState(*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, (AliStack*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->CalcPseudoSystem((AliStack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->EMCheck((AliStack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->FindEtaGaps((AliStack*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->GapCalculus(*(vector<Double_t>*) libp->para[0].ref, *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->CalcSD(*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, (AliStack*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->CalcSDslashDD(*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, (AliStack*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->CalcAssignmentSDslashDD(*(TLorentzVector*) libp->para[0].ref, *(TLorentzVector*) libp->para[1].ref
, (AliStack*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->vsort(*(vector<Double_t>*) libp->para[0].ref, *(vector<UInt_t>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<UInt_t>* pobj;
         vector<UInt_t> xobj = ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->vsortind(*(vector<Double_t>*) libp->para[0].ref);
         pobj = new vector<UInt_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->VectorMean(*(vector<Double_t>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->VectorMin(*(vector<Double_t>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->VectorMax(*(vector<Double_t>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AliAnalysisTaskDiffCrossSectionsMM::MCInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) AliAnalysisTaskDiffCrossSectionsMM::MCInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__Dictionary_649_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_649_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AliAnalysisTaskDiffCrossSectionsMM::MCInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AliAnalysisTaskDiffCrossSectionsMM::MCInfo(*(AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliAnalysisTaskDiffCrossSectionsMM::MCInfo G__TAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo;
static int G__Dictionary_649_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) (soff+(sizeof(AliAnalysisTaskDiffCrossSectionsMM::MCInfo)*i)))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) (soff))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_649_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::MCInfo* dest = (AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) G__getstructoffset();
   *dest = *(AliAnalysisTaskDiffCrossSectionsMM::MCInfo*) libp->para[0].ref;
   const AliAnalysisTaskDiffCrossSectionsMM::MCInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel */
static int G__Dictionary_651_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel[n];
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel;
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_651_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel(*(AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel G__TAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel;
static int G__Dictionary_651_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*) (soff+(sizeof(AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel)*i)))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*) (soff))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_651_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel* dest = (AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*) G__getstructoffset();
   *dest = *(AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*) libp->para[0].ref;
   const AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem */
static int G__Dictionary_652_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem[n];
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem;
     } else {
       p = new((void*) gvp) AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__Dictionary_652_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem(*(AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem G__TAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem;
static int G__Dictionary_652_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*) (soff+(sizeof(AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem)*i)))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*) (soff))->~G__TAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__Dictionary_652_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem* dest = (AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*) G__getstructoffset();
   *dest = *(AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*) libp->para[0].ref;
   const AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* AliAnalysisTaskDiffCrossSectionsMM */

/* AliAnalysisTaskDiffCrossSectionsMM::EventInfo */

/* AliAnalysisTaskDiffCrossSectionsMM::ADV0 */

/* AliAnalysisTaskDiffCrossSectionsMM::ZDC */

/* AliAnalysisTaskDiffCrossSectionsMM::VtxInfo */

/* AliAnalysisTaskDiffCrossSectionsMM::TreeData */

/* AliAnalysisTaskDiffCrossSectionsMM::MCInfo */

/* AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel */

/* AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDictionary {
 public:
  G__Sizep2memfuncDictionary(): p(&G__Sizep2memfuncDictionary::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDictionary::*p)();
};

size_t G__get_sizep2memfuncDictionary()
{
  G__Sizep2memfuncDictionary a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDictionary() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM))) {
     AliAnalysisTaskDiffCrossSectionsMM *G__Lderived;
     G__Lderived=(AliAnalysisTaskDiffCrossSectionsMM*)0x1000;
     {
       AliAnalysisTaskSE *G__Lpbase=(AliAnalysisTaskSE*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM),G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskSE),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       AliAnalysisTask *G__Lpbase=(AliAnalysisTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM),G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TTask *G__Lpbase=(TTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM),G__get_linked_tagnum(&G__DictionaryLN_TTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM),G__get_linked_tagnum(&G__DictionaryLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM),G__get_linked_tagnum(&G__DictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData))) {
     AliAnalysisTaskDiffCrossSectionsMM::TreeData *G__Lderived;
     G__Lderived=(AliAnalysisTaskDiffCrossSectionsMM::TreeData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData),G__get_linked_tagnum(&G__DictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo))) {
     AliAnalysisTaskDiffCrossSectionsMM::MCInfo *G__Lderived;
     G__Lderived=(AliAnalysisTaskDiffCrossSectionsMM::MCInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo),G__get_linked_tagnum(&G__DictionaryLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDictionary() {

   /* Setting up typedef entry */
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__DictionaryLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__DictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__DictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__DictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* AliAnalysisTaskDiffCrossSectionsMM */
static void G__setup_memvarAliAnalysisTaskDiffCrossSectionsMM(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM));
   { AliAnalysisTaskDiffCrossSectionsMM *p; p=(AliAnalysisTaskDiffCrossSectionsMM*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fIsMC=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_TString),-1,-1,4,"fMCType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_TString),-1,-1,4,"fTriggerSelection=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliTriggerAnalysis),-1,-1,4,"fTriggerAnalysis=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisUtils),-1,-1,4,"fAnalysisUtils=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictionaryLN_TTree),-1,-1,4,"fTE=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_TBits),-1,-1,4,"fFastOrMap=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_TBits),-1,-1,4,"fFiredChipMap=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliESDVertex),-1,-1,4,"fVertexSPD=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData),-1,-1,4,"fTreeData=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo),-1,-1,4,"fMCInfo=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AliAnalysisTaskDiffCrossSectionsMM::EventInfo */
static void G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo));
   { AliAnalysisTaskDiffCrossSectionsMM::EventInfo *p; p=(AliAnalysisTaskDiffCrossSectionsMM::EventInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fClassMask)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"fClassMask=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fClassMaskNext50)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"fClassMaskNext50=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fBCID)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fBCID=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPeriod)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fPeriod=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTimeStamp)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fTimeStamp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fL0Inputs)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fL0Inputs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fL1Inputs)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fL1Inputs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fnSPDClusters)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fnSPDClusters[2]=",0,"0 -> inner layer, 1 -> outer layer");
   G__memvar_setup((void*)((long)(&p->fRunNumber)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fRunNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fnTrklet)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"fnTrklet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fL2Inputs)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"fL2Inputs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fOrbitID)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"fOrbitID=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AliAnalysisTaskDiffCrossSectionsMM::ADV0 */
static void G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLADV0(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0));
   { AliAnalysisTaskDiffCrossSectionsMM::ADV0 *p; p=(AliAnalysisTaskDiffCrossSectionsMM::ADV0*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCside=%lldLL",(long long)AliAnalysisTaskDiffCrossSectionsMM::ADV0::kCside).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0cLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kAside=%lldLL",(long long)AliAnalysisTaskDiffCrossSectionsMM::ADV0::kAside).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTime[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fCharge)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fCharge[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fBB)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"fBB[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fBG)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"fBG[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fDecisionOnline)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"fDecisionOnline[2]=",0,"[-1,3,2]");
   G__memvar_setup((void*)((long)(&p->fDecisionOffline)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"fDecisionOffline[2]=",0,"[-1,3,2]");
   }
   G__tag_memvar_reset();
}


   /* AliAnalysisTaskDiffCrossSectionsMM::ZDC */
static void G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLZDC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC));
   { AliAnalysisTaskDiffCrossSectionsMM::ZDC *p; p=(AliAnalysisTaskDiffCrossSectionsMM::ZDC*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCside=%lldLL",(long long)AliAnalysisTaskDiffCrossSectionsMM::ZDC::kCside).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDCcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kAside=%lldLL",(long long)AliAnalysisTaskDiffCrossSectionsMM::ZDC::kAside).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fZNHit)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fZNHit[2]=",0,"Hit in Neutron part");
   G__memvar_setup((void*)((long)(&p->fZPHit)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fZPHit[2]=",0,"Hit in Proton part");
   G__memvar_setup((void*)((long)(&p->fZNEnergy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fZNEnergy[2]=",0,"Reconstructed energy in the neutron ZDC");
   G__memvar_setup((void*)((long)(&p->fZPEnergy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fZPEnergy[2]=",0,"Reconstructed energy in the proton ZDC");
   }
   G__tag_memvar_reset();
}


   /* AliAnalysisTaskDiffCrossSectionsMM::VtxInfo */
static void G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo));
   { AliAnalysisTaskDiffCrossSectionsMM::VtxInfo *p; p=(AliAnalysisTaskDiffCrossSectionsMM::VtxInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fZ)-(long)(p)),100,0,0,-1,G__defined_typename("Double32_t"),-1,1,"fZ=",0,"[-32,32,7]");
   G__memvar_setup((void*)((long)(&p->fNcontr)-(long)(p)),99,0,0,-1,G__defined_typename("Char_t"),-1,1,"fNcontr=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AliAnalysisTaskDiffCrossSectionsMM::TreeData */
static void G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLTreeData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData));
   { AliAnalysisTaskDiffCrossSectionsMM::TreeData *p; p=(AliAnalysisTaskDiffCrossSectionsMM::TreeData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fEventInfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo),-1,-1,1,"fEventInfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fVtxInfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo),-1,-1,1,"fVtxInfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fV0Info)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0),-1,-1,1,"fV0Info=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fADInfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0),-1,-1,1,"fADInfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fZDCInfo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC),-1,-1,1,"fZDCInfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fPhysSelBits)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fPhysSelBits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIsIncompleteDAQ)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fIsIncompleteDAQ=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fIsSPDClusterVsTrackletBG)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fIsSPDClusterVsTrackletBG=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AliAnalysisTaskDiffCrossSectionsMM::MCInfo */
static void G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo));
   { AliAnalysisTaskDiffCrossSectionsMM::MCInfo *p; p=(AliAnalysisTaskDiffCrossSectionsMM::MCInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kInvalid=%lldLL",(long long)AliAnalysisTaskDiffCrossSectionsMM::MCInfo::kInvalid).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kSDL=%lldLL",(long long)AliAnalysisTaskDiffCrossSectionsMM::MCInfo::kSDL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kSDR=%lldLL",(long long)AliAnalysisTaskDiffCrossSectionsMM::MCInfo::kSDR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kDD=%lldLL",(long long)AliAnalysisTaskDiffCrossSectionsMM::MCInfo::kDD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kCD=%lldLL",(long long)AliAnalysisTaskDiffCrossSectionsMM::MCInfo::kCD).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kND=%lldLL",(long long)AliAnalysisTaskDiffCrossSectionsMM::MCInfo::kND).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLdA),-1,-2,1,G__FastAllocString(2048).Format("kElastic=%lldLL",(long long)AliAnalysisTaskDiffCrossSectionsMM::MCInfo::kElastic).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEventType)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fEventType=",0,"[-3,5,3]");
   G__memvar_setup((void*)((long)(&p->fDiffSys)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem),-1,-1,1,"fDiffSys=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EM_check_SC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"EM_check_SC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EM_check_PP)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"EM_check_PP=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ZDNC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel),-1,-1,1,"ZDNC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ADC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel),-1,-1,1,"ADC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->V0C)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel),-1,-1,1,"V0C=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SPDC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel),-1,-1,1,"SPDC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SPDA)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel),-1,-1,1,"SPDA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->V0A)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel),-1,-1,1,"V0A=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ADA)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel),-1,-1,1,"ADA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ZDNA)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel),-1,-1,1,"ZDNA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MinEtaVisibleCharged)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MinEtaVisibleCharged=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxEtaVisibleCharged)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MaxEtaVisibleCharged=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxGapVisibleCharged)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MaxGapVisibleCharged=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MinEtaVisibleNeutral)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MinEtaVisibleNeutral=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxEtaVisibleNeutral)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MaxEtaVisibleNeutral=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxGapVisibleNeutral)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MaxGapVisibleNeutral=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxGapVisibleAll)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MaxGapVisibleAll=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DictionaryLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel */
static void G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel));
   { AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel *p; p=(AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->NCharged)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"NCharged=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->NNeutral)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"NNeutral=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MeanPtCharged)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MeanPtCharged=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MeanPtNeutral)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MeanPtNeutral=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MinPtCharged)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MinPtCharged=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MinPtNeutral)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MinPtNeutral=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxPtCharged)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MaxPtCharged=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->MaxPtNeutral)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MaxPtNeutral=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem */
static void G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem));
   { AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem *p; p=(AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->t)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"t=",0,"Mandelstam, physical domain is negative values in GeV^2.");
   G__memvar_setup((void*)((long)(&p->Mass)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Mass[2]=",0,"Diffractive system mass [0] -> L, [1] -> R (calculated from the final states 4-momenta)");
   G__memvar_setup((void*)((long)(&p->Mass_PDG)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Mass_PDG[2]=",0,"(calculated from Pythia Diffractive Pseudoparticle 4-momentum with PDG code 9902210)");
   G__memvar_setup((void*)((long)(&p->NCharged)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"NCharged[2]=",0,"Charged multiplicity");
   G__memvar_setup((void*)((long)(&p->NNeutral)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"NNeutral[2]=",0,"Neutral");
   G__memvar_setup((void*)((long)(&p->MeanPtCharged)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MeanPtCharged[2]=",0,"Mean |pt| of charged");
   G__memvar_setup((void*)((long)(&p->MeanPtNeutral)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MeanPtNeutral[2]=",0,"Neutral");
   G__memvar_setup((void*)((long)(&p->MinEtaCharged)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MinEtaCharged[2]=",0,"Minimum pseudorapidity of charged particles in the system");
   G__memvar_setup((void*)((long)(&p->MinEtaNeutral)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MinEtaNeutral[2]=",0,"Neutral");
   G__memvar_setup((void*)((long)(&p->MaxEtaCharged)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MaxEtaCharged[2]=",0,"Maximum pseudorapidity of charged particles in the system");
   G__memvar_setup((void*)((long)(&p->MaxEtaNeutral)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"MaxEtaNeutral[2]=",0,"Neutral");
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDictionary() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMM(void) {
   /* AliAnalysisTaskDiffCrossSectionsMM */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM));
   G__memfunc_setup("AliAnalysisTaskDiffCrossSectionsMM",3410,G__Dictionary_641_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM), -1, 0, 1, 1, 1, 0, "C - - 10 '\"AliAnalysisTaskDiffCrossSectionsMM\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NotifyRun",942,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UserCreateOutputObjects",2382,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", "called once at the beginning of runtime", (void*) NULL, 1);
   G__memfunc_setup("UserExec",804,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - option", "called for each event", (void*) NULL, 1);
   G__memfunc_setup("Terminate",937,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", "called at end of analysis", (void*) NULL, 1);
   G__memfunc_setup("SetIsMC",632,G__Dictionary_641_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMCType",862,G__Dictionary_641_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTriggerSelection",1958,G__Dictionary_641_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - ts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTreeName",1073,G__Dictionary_641_0_9, 117, G__get_linked_tagnum(&G__DictionaryLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResultsFileName",1811,G__Dictionary_641_0_10, 117, G__get_linked_tagnum(&G__DictionaryLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranches",1106,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'TTree' - 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AliAnalysisTaskDiffCrossSectionsMM",3410,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM), -1, 0, 1, 1, 4, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM), -1, 1, 1, 1, 4, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM' - 11 - -", "not implemented", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dictionary_641_0_14, 85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AliAnalysisTaskDiffCrossSectionsMM::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dictionary_641_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliAnalysisTaskDiffCrossSectionsMM::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dictionary_641_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AliAnalysisTaskDiffCrossSectionsMM::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dictionary_641_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AliAnalysisTaskDiffCrossSectionsMM::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dictionary_641_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dictionary_641_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliAnalysisTaskDiffCrossSectionsMM::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dictionary_641_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AliAnalysisTaskDiffCrossSectionsMM::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dictionary_641_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliAnalysisTaskDiffCrossSectionsMM::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dictionary_641_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AliAnalysisTaskDiffCrossSectionsMM::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~AliAnalysisTaskDiffCrossSectionsMM", 3536, G__Dictionary_641_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo(void) {
   /* AliAnalysisTaskDiffCrossSectionsMM::EventInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo));
   G__memfunc_setup("EventInfo",910,G__Dictionary_642_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__Dictionary_642_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'AliESDEvent' - 10 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("EventInfo", 910, G__Dictionary_642_0_3, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo), -1, 0, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::EventInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventInfo", 1036, G__Dictionary_642_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_642_0_5, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo), -1, 1, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::EventInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLADV0(void) {
   /* AliAnalysisTaskDiffCrossSectionsMM::ADV0 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0));
   G__memfunc_setup("ADV0",267,G__Dictionary_643_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillAD",524,G__Dictionary_643_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'AliESDEvent' - 10 - - u 'AliTriggerAnalysis' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillV0",525,G__Dictionary_643_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'AliESDEvent' - 10 - - u 'AliTriggerAnalysis' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillInvalid",1102,G__Dictionary_643_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ADV0", 267, G__Dictionary_643_0_5, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0), -1, 0, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::ADV0' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ADV0", 393, G__Dictionary_643_0_6, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_643_0_7, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0), -1, 1, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::ADV0' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLZDC(void) {
   /* AliAnalysisTaskDiffCrossSectionsMM::ZDC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC));
   G__memfunc_setup("ZDC",225,G__Dictionary_645_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillZDC",616,G__Dictionary_645_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'AliESDEvent' - 10 - - u 'AliTriggerAnalysis' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillInvalid",1102,G__Dictionary_645_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ZDC", 225, G__Dictionary_645_0_4, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC), -1, 0, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::ZDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ZDC", 351, G__Dictionary_645_0_5, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_645_0_6, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC), -1, 1, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::ZDC' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo(void) {
   /* AliAnalysisTaskDiffCrossSectionsMM::VtxInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo));
   G__memfunc_setup("VtxInfo",718,G__Dictionary_647_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__Dictionary_647_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'AliESDVertex' - 10 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("VtxInfo", 718, G__Dictionary_647_0_3, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo), -1, 0, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::VtxInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~VtxInfo", 844, G__Dictionary_647_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_647_0_5, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo), -1, 1, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::VtxInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLTreeData(void) {
   /* AliAnalysisTaskDiffCrossSectionsMM::TreeData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData));
   G__memfunc_setup("TreeData",778,G__Dictionary_648_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dictionary_648_0_2, 85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AliAnalysisTaskDiffCrossSectionsMM::TreeData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dictionary_648_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliAnalysisTaskDiffCrossSectionsMM::TreeData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dictionary_648_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AliAnalysisTaskDiffCrossSectionsMM::TreeData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dictionary_648_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AliAnalysisTaskDiffCrossSectionsMM::TreeData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dictionary_648_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dictionary_648_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliAnalysisTaskDiffCrossSectionsMM::TreeData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dictionary_648_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AliAnalysisTaskDiffCrossSectionsMM::TreeData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dictionary_648_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliAnalysisTaskDiffCrossSectionsMM::TreeData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dictionary_648_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AliAnalysisTaskDiffCrossSectionsMM::TreeData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TreeData", 778, G__Dictionary_648_0_14, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData), -1, 0, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::TreeData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TreeData", 904, G__Dictionary_648_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_648_0_16, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData), -1, 1, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::TreeData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo(void) {
   /* AliAnalysisTaskDiffCrossSectionsMM::MCInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo));
   G__memfunc_setup("MCInfo",540,G__Dictionary_649_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Fill",391,G__Dictionary_649_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'AliMCEvent' - 10 - - u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillComb",776,G__Dictionary_649_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'AliMCEvent' - 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckFiducial",1279,G__Dictionary_649_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TParticle' - 10 - p u 'AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel' - 1 - det "
"D - 'Double_t' 10 - eta_range d - 'Double_t' 10 - minPt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReCalc4Vector",1233,G__Dictionary_649_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TLorentzVector' - 1 - v U 'TParticle' - 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcInitialState",1598,G__Dictionary_649_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TLorentzVector' - 1 - p_plus u 'TLorentzVector' - 1 - p_minus "
"U 'AliStack' - 0 - stack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcPseudoSystem",1640,G__Dictionary_649_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'AliStack' - 0 - stack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EMCheck",624,G__Dictionary_649_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'AliStack' - 0 - stack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FindEtaGaps",1062,G__Dictionary_649_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'AliStack' - 0 - stack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GapCalculus",1108,G__Dictionary_649_0_10, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - eta f - 'Float_t' 1 - MinEta "
"f - 'Float_t' 1 - MaxEta f - 'Float_t' 1 - MaxGap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSD",522,G__Dictionary_649_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TLorentzVector' - 11 - p_plus u 'TLorentzVector' - 11 - p_minus "
"U 'AliStack' - 0 - stack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcSDslashDD",1197,G__Dictionary_649_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TLorentzVector' - 11 - p_plus u 'TLorentzVector' - 11 - p_minus "
"U 'AliStack' - 0 - stack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcAssignmentSDslashDD",2246,G__Dictionary_649_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TLorentzVector' - 11 - p_plus u 'TLorentzVector' - 11 - p_minus "
"U 'AliStack' - 0 - stack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vsort",574,G__Dictionary_649_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<Double_t>' 1 - v u 'vector<unsigned int,allocator<unsigned int> >' 'vector<UInt_t>' 11 - sort_ind", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vsortind",889,G__Dictionary_649_0_15, 117, G__get_linked_tagnum(&G__DictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<UInt_t>"), 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VectorMean",1012,G__Dictionary_649_0_16, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VectorMin",919,G__Dictionary_649_0_17, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VectorMax",921,G__Dictionary_649_0_18, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<Double_t>' 11 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__Dictionary_649_0_19, 85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__Dictionary_649_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__Dictionary_649_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__Dictionary_649_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&AliAnalysisTaskDiffCrossSectionsMM::MCInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DictionaryLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__Dictionary_649_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__Dictionary_649_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__Dictionary_649_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AliAnalysisTaskDiffCrossSectionsMM::MCInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__Dictionary_649_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&AliAnalysisTaskDiffCrossSectionsMM::MCInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__Dictionary_649_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MCInfo", 540, G__Dictionary_649_0_31, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo), -1, 0, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::MCInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MCInfo", 666, G__Dictionary_649_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_649_0_33, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo), -1, 1, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::MCInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel(void) {
   /* AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel));
   G__memfunc_setup("DetGenLevel",1071,G__Dictionary_651_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel), -1, 0, 0, 1, 1, 0, "", "<- Important init values ", (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DetGenLevel", 1071, G__Dictionary_651_0_2, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel), -1, 0, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DetGenLevel", 1197, G__Dictionary_651_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_651_0_4, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel), -1, 1, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem(void) {
   /* AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem));
   G__memfunc_setup("DiffSystem",1022,G__Dictionary_652_0_1, 105, G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DiffSystem", 1022, G__Dictionary_652_0_2, (int) ('i'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem), -1, 0, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DiffSystem", 1148, G__Dictionary_652_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__Dictionary_652_0_4, (int) ('u'), G__get_linked_tagnum(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem), -1, 1, 1, 1, 1, 0, "u 'AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDictionary() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDictionary() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDictionary() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DictionaryLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_AliMCEvent = { "AliMCEvent" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_AliESDEvent = { "AliESDEvent" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TBits = { "TBits" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TParticle = { "TParticle" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_AliStack = { "AliStack" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_AliESDVertex = { "AliESDVertex" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_TTask = { "TTask" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTask = { "AliAnalysisTask" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTaskSE = { "AliAnalysisTaskSE" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_AliTriggerAnalysis = { "AliTriggerAnalysis" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisUtils = { "AliAnalysisUtils" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM = { "AliAnalysisTaskDiffCrossSectionsMM" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo = { "AliAnalysisTaskDiffCrossSectionsMM::EventInfo" , 115 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0 = { "AliAnalysisTaskDiffCrossSectionsMM::ADV0" , 115 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0cLcLdA = { "AliAnalysisTaskDiffCrossSectionsMM::ADV0::$" , 101 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC = { "AliAnalysisTaskDiffCrossSectionsMM::ZDC" , 115 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDCcLcLdA = { "AliAnalysisTaskDiffCrossSectionsMM::ZDC::$" , 101 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo = { "AliAnalysisTaskDiffCrossSectionsMM::VtxInfo" , 115 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData = { "AliAnalysisTaskDiffCrossSectionsMM::TreeData" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo = { "AliAnalysisTaskDiffCrossSectionsMM::MCInfo" , 99 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLdA = { "AliAnalysisTaskDiffCrossSectionsMM::MCInfo::$" , 101 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel = { "AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel" , 115 , -1 };
G__linked_taginfo G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem = { "AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDictionary() {
  G__DictionaryLN_TClass.tagnum = -1 ;
  G__DictionaryLN_TBuffer.tagnum = -1 ;
  G__DictionaryLN_TMemberInspector.tagnum = -1 ;
  G__DictionaryLN_TObject.tagnum = -1 ;
  G__DictionaryLN_TNamed.tagnum = -1 ;
  G__DictionaryLN_TString.tagnum = -1 ;
  G__DictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DictionaryLN_TTree.tagnum = -1 ;
  G__DictionaryLN_AliMCEvent.tagnum = -1 ;
  G__DictionaryLN_AliESDEvent.tagnum = -1 ;
  G__DictionaryLN_TBits.tagnum = -1 ;
  G__DictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DictionaryLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DictionaryLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__DictionaryLN_TLorentzVector.tagnum = -1 ;
  G__DictionaryLN_TParticle.tagnum = -1 ;
  G__DictionaryLN_AliStack.tagnum = -1 ;
  G__DictionaryLN_AliESDVertex.tagnum = -1 ;
  G__DictionaryLN_TTask.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTask.tagnum = -1 ;
  G__DictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTaskSE.tagnum = -1 ;
  G__DictionaryLN_AliTriggerAnalysis.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisUtils.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0cLcLdA.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDCcLcLdA.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLdA.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel.tagnum = -1 ;
  G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDictionary() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TClass);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TObject);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TNamed);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TString);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TTree);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_AliMCEvent);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_AliESDEvent);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TBits);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TParticle);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_AliStack);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_AliESDVertex);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_TTask);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTask);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTaskSE);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_AliTriggerAnalysis);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisUtils);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMM),sizeof(AliAnalysisTaskDiffCrossSectionsMM),-1,327424,(char*)NULL,G__setup_memvarAliAnalysisTaskDiffCrossSectionsMM,G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMM);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo),sizeof(AliAnalysisTaskDiffCrossSectionsMM::EventInfo),-1,262400,(char*)NULL,G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo,G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLEventInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0),sizeof(AliAnalysisTaskDiffCrossSectionsMM::ADV0),-1,262400,(char*)NULL,G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLADV0,G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLADV0);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLADV0cLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDC),sizeof(AliAnalysisTaskDiffCrossSectionsMM::ZDC),-1,262400,(char*)NULL,G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLZDC,G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLZDC);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLZDCcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo),sizeof(AliAnalysisTaskDiffCrossSectionsMM::VtxInfo),-1,262400,(char*)NULL,G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo,G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLVtxInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLTreeData),sizeof(AliAnalysisTaskDiffCrossSectionsMM::TreeData),-1,291072,(char*)NULL,G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLTreeData,G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLTreeData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo),sizeof(AliAnalysisTaskDiffCrossSectionsMM::MCInfo),-1,291072,(char*)NULL,G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo,G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfo);
   G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel),sizeof(AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DetGenLevel),-1,262400,(char*)NULL,G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel,G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDetGenLevel);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DictionaryLN_AliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem),sizeof(AliAnalysisTaskDiffCrossSectionsMM::MCInfo::DiffSystem),-1,262400,(char*)NULL,G__setup_memvarAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem,G__setup_memfuncAliAnalysisTaskDiffCrossSectionsMMcLcLMCInfocLcLDiffSystem);
}
extern "C" void G__cpp_setupDictionary(void) {
  G__check_setup_version(30051515,"G__cpp_setupDictionary()");
  G__set_cpp_environmentDictionary();
  G__cpp_setup_tagtableDictionary();

  G__cpp_setup_inheritanceDictionary();

  G__cpp_setup_typetableDictionary();

  G__cpp_setup_memvarDictionary();

  G__cpp_setup_memfuncDictionary();
  G__cpp_setup_globalDictionary();
  G__cpp_setup_funcDictionary();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDictionary();
  return;
}
class G__cpp_setup_initDictionary {
  public:
    G__cpp_setup_initDictionary() { G__add_setup_func("Dictionary",(G__incsetup)(&G__cpp_setupDictionary)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDictionary() { G__remove_setup_func("Dictionary"); }
};
G__cpp_setup_initDictionary G__cpp_setup_initializerDictionary;

